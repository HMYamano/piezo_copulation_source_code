<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.6.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:dlc="clr-namespace:Bonsai.DeepLabCut;assembly=Bonsai.DeepLabCut"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:ard="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:FileCapture">
          <cv:FileName>H:\yamanouchi_behavior\copulation\CS-H\training\211021\211021_training_cop_CS-H_isolatedMvirgineF_IRlight_3rdPC_1.avi</cv:FileName>
          <cv:PlaybackRate>61378.621378621378</cv:PlaybackRate>
          <cv:StartPosition>0</cv:StartPosition>
          <cv:PositionUnits>Frames</cv:PositionUnits>
          <cv:Loop>false</cv:Loop>
          <cv:Playing>true</cv:Playing>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="dlc:DetectPose">
          <dlc:ModelFileName>exported-models\DLC_det_cop_opto_resnet_50_iteration-0_shuffle-1\snapshot-500000.pb</dlc:ModelFileName>
          <dlc:PoseConfigFileName>exported-models\DLC_det_cop_opto_resnet_50_iteration-0_shuffle-1\pose_cfg.yaml</dlc:PoseConfigFileName>
          <dlc:MinConfidence>0.4329897</dlc:MinConfidence>
          <dlc:ScaleFactor xsi:nil="true" />
          <dlc:ColorConversion xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>csv\trial_csv.csv</io:FileName>
        <io:Append>true</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>true</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Description />
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>F_rch</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>F_lch</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  a = value.Item1
  b = value.Item2
  position = (a + b) / 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  a = value.Item1
  b = value.Item2
  position = (a + b) / 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>M_reye</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>M_leye</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  a = value.Item1
  b = value.Item2
  position = (a + b) / 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Subtract" />
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  position = value ** 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  a = value.Item1
  b = value.Item2
  position = (a + b) / 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Subtract" />
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  position = value ** 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Add" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>4000</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:CombineLatest" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns (int)
def process(value):
  distance = value.Item1
  threshold = value.Item2
  global inside  

  if (distance &lt;= threshold):
    inside = True
    judge = 1
    return judge
  else:
    inside = False
    judge = 0
    return judge
</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>F_cch</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>M_rch</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dlc:GetBodyPart">
                <dlc:Name>M_lch</dlc:Name>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.X</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  a = value.Item1
  b = value.Item2
  position = (a + b) / 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Subtract" />
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  position = value ** 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Position.Y</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  a = value.Item1
  b = value.Item2
  position = (a + b) / 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Subtract" />
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns(float)
def process(value):
  position = value ** 2
  return position</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Add" />
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>4000</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:CombineLatest" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns (int)
def process(value):
  distance = value.Item1
  threshold = value.Item2
  global inside  

  if (distance &lt;= threshold):
    inside = True
    judge = 1
    return judge
  else:
    inside = False
    judge = 0
    return judge
</scr:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:CombineLatest" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Script>@returns (bool)
def process(value):
  jud1 = value.Item1
  jud2 = value.Item2
  
  jud = jud1 + jud2
  if (jud &gt;= 2):
    kint = True
    return kint
  else:
    kint = False
    return kint
</scr:Script>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="0" To="4" Label="Source1" />
            <Edge From="0" To="11" Label="Source1" />
            <Edge From="0" To="14" Label="Source1" />
            <Edge From="0" To="32" Label="Source1" />
            <Edge From="0" To="35" Label="Source1" />
            <Edge From="0" To="38" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="1" To="3" Label="Source1" />
            <Edge From="2" To="6" Label="Source1" />
            <Edge From="3" To="9" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="4" To="8" Label="Source1" />
            <Edge From="5" To="6" Label="Source2" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="18" Label="Source1" />
            <Edge From="8" To="9" Label="Source2" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="24" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="11" To="13" Label="Source1" />
            <Edge From="12" To="16" Label="Source1" />
            <Edge From="13" To="22" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="14" To="21" Label="Source1" />
            <Edge From="15" To="16" Label="Source2" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="18" Label="Source2" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="20" To="27" Label="Source1" />
            <Edge From="21" To="22" Label="Source2" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="23" To="24" Label="Source2" />
            <Edge From="24" To="25" Label="Source1" />
            <Edge From="25" To="26" Label="Source1" />
            <Edge From="26" To="27" Label="Source2" />
            <Edge From="27" To="28" Label="Source1" />
            <Edge From="28" To="30" Label="Source1" />
            <Edge From="29" To="30" Label="Source2" />
            <Edge From="30" To="31" Label="Source1" />
            <Edge From="31" To="56" Label="Source1" />
            <Edge From="32" To="33" Label="Source1" />
            <Edge From="32" To="34" Label="Source1" />
            <Edge From="33" To="42" Label="Source1" />
            <Edge From="34" To="48" Label="Source1" />
            <Edge From="35" To="36" Label="Source1" />
            <Edge From="35" To="37" Label="Source1" />
            <Edge From="36" To="40" Label="Source1" />
            <Edge From="37" To="46" Label="Source1" />
            <Edge From="38" To="39" Label="Source1" />
            <Edge From="38" To="45" Label="Source1" />
            <Edge From="39" To="40" Label="Source2" />
            <Edge From="40" To="41" Label="Source1" />
            <Edge From="41" To="42" Label="Source2" />
            <Edge From="42" To="43" Label="Source1" />
            <Edge From="43" To="44" Label="Source1" />
            <Edge From="44" To="51" Label="Source1" />
            <Edge From="45" To="46" Label="Source2" />
            <Edge From="46" To="47" Label="Source1" />
            <Edge From="47" To="48" Label="Source2" />
            <Edge From="48" To="49" Label="Source1" />
            <Edge From="49" To="50" Label="Source1" />
            <Edge From="50" To="51" Label="Source2" />
            <Edge From="51" To="52" Label="Source1" />
            <Edge From="52" To="54" Label="Source1" />
            <Edge From="53" To="54" Label="Source2" />
            <Edge From="54" To="55" Label="Source1" />
            <Edge From="55" To="56" Label="Source2" />
            <Edge From="56" To="57" Label="Source1" />
            <Edge From="57" To="58" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT0S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT15S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>csv\LED_state.csv</io:FileName>
        <io:Append>false</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>true</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="ard:DigitalOutput">
          <ard:PortName>COM3</ard:PortName>
          <ard:Pin>13</ard:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:VideoWriter">
          <cv:FileName>tryalvideo</cv:FileName>
          <cv:Suffix>Timestamp</cv:Suffix>
          <cv:Buffered>true</cv:Buffered>
          <cv:Overwrite>false</cv:Overwrite>
          <cv:FourCC>FMP4</cv:FourCC>
          <cv:FrameRate>30</cv:FrameRate>
          <cv:FrameSize>
            <cv:Width>0</cv:Width>
            <cv:Height>0</cv:Height>
          </cv:FrameSize>
          <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
        </Combinator>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="ard:AnalogOutput">
            <ard:Pin>13</ard:Pin>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="cv:VideoWriter">
            <cv:FileName>detectmovies.mp4</cv:FileName>
            <cv:Suffix>Timestamp</cv:Suffix>
            <cv:Buffered>true</cv:Buffered>
            <cv:Overwrite>false</cv:Overwrite>
            <cv:FourCC>FMP4</cv:FourCC>
            <cv:FrameRate>30</cv:FrameRate>
            <cv:FrameSize>
              <cv:Width>0</cv:Width>
              <cv:Height>0</cv:Height>
            </cv:FrameSize>
            <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:DelaySubscription">
            <rx:DueTime>PT3M30S</rx:DueTime>
          </Combinator>
        </Builder>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="0" To="8" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="1" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="4" To="7" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>